<?xml version="1.0" encoding="utf-8"?>
<!--
  M3 Android Functions
  (c) 2018 Mark Whitty
-->
<root xmlns:android="http://schemas.android.com/apk/res/android">
  <!-- init section is always evaluated once per architecture -->
  <init>
    <log text="M3AndroidFunctions init"/>
    <setBoolFromProperty result="bShowTitleBar" ini="Engine" section="/Script/M3AndroidFunctions.M3AndroidFunctionsSettings" property="bShowTitleBar" default="false"/>
  </init>

  <androidManifestUpdates>
    <!-- Theme -->
    <if condition="bShowTitleBar">
      <true>
        <addAttribute tag="activity" name="android:theme" value="@android:style/Theme.Black.NoTitleBar"/>  
      </true>
    </if>
  </androidManifestUpdates>

  <!-- optional additions to the GameActivity imports in GameActivity.java -->
  <gameActivityImportAdditions>
    <insert>
      import android.app.Activity;
      import android.net.Uri;
      import android.os.Environment;
      import android.app.Activity;
      import android.content.Intent;
      import android.content.ActivityNotFoundException;
    </insert>
  </gameActivityImportAdditions>

  <gameActivityOnCreateAdditions>
      <if condition="bShowTitleBar">
        <true>
          <insert>
          <!-- Theme -->
            if(android.os.Build.VERSION.SDK_INT >= 19) {
            try {
            View decorView = getWindow().getDecorView();
            decorView.setSystemUiVisibility(
            View.SYSTEM_UI_FLAG_LAYOUT_STABLE
            | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
            } catch (Exception e) {}
            }
          </insert>
        </true>
      </if>
  </gameActivityOnCreateAdditions>

  <gameActivityClassAdditions>
    <insert>

      public void AndroidThunkJava_setStatusBarVisibility(boolean inVisibility)
      {
        if (inVisibility)
        { //Show UI
          _activity.runOnUiThread(new Runnable()
          {
            @Override
            public void run()
            {
              View decorView = getWindow().getDecorView();
              decorView.setSystemUiVisibility(
              View.SYSTEM_UI_FLAG_LAYOUT_STABLE
              | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
              | View.SYSTEM_UI_FLAG_VISIBLE);
              //int uiOptions = View.SYSTEM_UI_FLAG_VISIBLE;
              //decorView.setSystemUiVisibility(uiOptions);
            }
          });
        }
        else
        { //Hide UI
          _activity.runOnUiThread(new Runnable()
          {
            @Override
            public void run()
            {
              View decorView = getWindow().getDecorView();
              int uiOptions = View.SYSTEM_UI_FLAG_FULLSCREEN;
              decorView.setSystemUiVisibility(uiOptions);
            }
          });
        }
      }

      public String AndroidThunkJava_getIntentStringExtra(String keyName)
      {
        if (getIntent().hasExtra(keyName)){
        return getIntent().getStringExtra(keyName);
      }
        return "not found";
      }

      public void AndroidThunkJava_setPortrait()
      {
        _activity.setRequestedOrientation( android.content.pm.ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED );
        _activity.setRequestedOrientation( android.content.pm.ActivityInfo.SCREEN_ORIENTATION_PORTRAIT );
      }

      public void AndroidThunkJava_setLandscape()
      {
        _activity.setRequestedOrientation( android.content.pm.ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED );
        _activity.setRequestedOrientation( android.content.pm.ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE );
      }
      
      public static boolean isPackageInstalled(String packageName, PackageManager packageManager) 
      {
      try {
        return packageManager.getApplicationInfo(packageName, 0).enabled;
      }
      catch (PackageManager.NameNotFoundException e) {
        return false;
          }
      }

      public boolean AndroidThunkJava_isPackageInstalled(String packageName)
      {
        return isPackageInstalled(packageName, this.getPackageManager());
      }
      
      public boolean AndroidThunkJava_openExternalApp(String packageName, String[] stringExtraKeys, String[] stringExtraValues)
      {
            boolean isInstalled = isPackageInstalled(packageName, this.getPackageManager());
            
            if (isInstalled) 
            {
            PackageManager pm = this.getPackageManager();
                try {
                  Intent newAppIntent = pm.getLaunchIntentForPackage(packageName);
                  for(int i=0; i &lt; stringExtraKeys.length; i++){
                    newAppIntent.putExtra(stringExtraKeys[i], stringExtraValues[i]);
                  }
                    if (null != newAppIntent) 
                  {
                    startActivity(newAppIntent);
                  }
                }
                catch (ActivityNotFoundException e) {
                    return false;
                }
                return true;
                } 
                else 
                {
                return false;
                }
      }

      public boolean AndroidThunkJava_deviceHasCamera()
      {
        PackageManager pm = this.getPackageManager();
        return (pm.hasSystemFeature(PackageManager.FEATURE_CAMERA_ANY));
      }
      
    </insert>
  </gameActivityClassAdditions>

</root>